name: "Terraform K8S Pipeline"

on:
  push:
    branches:
      - main

env:
  REGION_DEFAULT: us-east-1

jobs:
  deploy-s3:
    name: Deploy S3 Bucket
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}

      - name: Terraform Format
        working-directory: ./s3        
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: ./s3
        run: terraform init
      
      - name: Terraform Validate
        working-directory: ./s3
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: ./s3
        run: terraform plan -no-color -input=false -out=tfplan

      - name: Terraform Apply
        working-directory: ./s3
        if: success() && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false

  deploy-eks:
    name: Deploy Kubernetes Infrastructure
    runs-on: ubuntu-latest
    needs: deploy-s3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}

      - name: Terraform Format
        working-directory: ./terraform        
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
      
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -no-color -input=false -out=tfplan

      - name: Terraform Apply
        working-directory: ./terraform
        if: success() && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
